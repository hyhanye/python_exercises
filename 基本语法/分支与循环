# 分支结构
代码在执行时，是一条一条语句顺序执行，这种代码结构通常称之为顺序结构。然而仅有顺序结构并不能解决所有的问题，例如苹果的价格如果小于10元，就买一个苹果，不然就买一个香蕉。我们将这种结构称之为“分支结构”或“选择结构”。

分支程序的特点是程序被执行时根据一定的条件有些语句没有机会被执行，满足某条件的时候执行一部分语句，不满足时执行另一部分语句，即有选择性的执行部分语句，即分支型结构的程序。这样可以看出分支程序有三个部分：条件、条件满足时执行的语句和条件不满足时执行的语句。
## if语句
* 条件一般是关系表达式，条件介于if关键字和冒号(:)之间，在if之下是条件满足时需要执行的语句，可以多条语句称之为语句块。 与if对齐的else下面的语句是条件不满足时执行的语句，需要注意的是else后有冒号但没有条件。 if和else下的每条语句前都要按一下Tab键进行缩进对齐。
```python
gender='M'
if gender == 'M':
    print('male')
else:
    print('female')
```

* if_else是二分支结构只有一个可判断的条件，而python里有多条件判断的分支结构，实现多个条件的判断和一个else，其结构如下所示：
```python
a = 65 # 55 75 85 95
if a >= 90:
    print('great')
elif a >= 80:
    print('good')
elif a >= 70:
    print('normal')
elif a >= 60:
    print('pass')
else:
    print('fail')
```

* if_else分支语句其下的语句块里的语句也可有if_else语句即分支的嵌套，上节的评级程序可以用if嵌套来完成。
```python
a = 55
if a >= 60:
    if a >= 70:
        if a >= 80:
            if a >= 90:
                print('great')
            else:
                print('good')
        else:
            print('normal')
    else:
        print('pass')
else:
    print('fail')
```

## while语句
循环体和分支在Python里的结构差别仅仅需要将if换成while即可。

* 循环体不像分支if那样其下的语句块只被执行一次，while循环体下的语句块可能会被执行多次。即while后的条件满足执行其下语句块内容，执行完毕后又会回到while再看看其条件是否满足，如果满足执行其下语句序列块，周而复始。直到某次回到while这行时，条件不再被满足，则执行其else下的语句块，结束while。因此在while下的语句块里一般要有修改某变量的语句从而影响while的条件的真和假的可能。
```python
a = 12
while a < 18:
    print("young!")
    a = a + 1
else:
    print("Adult")
```
* 如果忘记在循环中修改变量a,会导致循环被永无止境地执行，我们称之为“死循环”。